name: CI
on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          lfs: true

#      - name: Setup Node.js environment
#        uses: actions/setup-node@v4
#        with:
#          node-version: 22
#          cache: 'yarn'
#          cache-dependency-path: 'yarn.lock'
#
#      # check if we have any issue on dependencies
#      - name: Install dependencies
#        run: yarn
#
#      - name: Clean Vendor Cache
#        run: yarn vendor:clean-cache
#
#      - name: Clean Vendor Cache
#        run: ls -la vendor/cosmjs/.yarn
#
#      - name: Install subql
#        run: yarn vendor:subql:install
#
#      - name: Install cosmjs
#        run: yarn vendor:cosmjs:install:ci

#      - name: Lint subql
#        run: yarn vendor:subql:install
#
#      - name: Lint cosmjs
#        run: yarn vendor:cosmjs:install
#
#      - name: Build subql
#        run: yarn vendor:subql:build
#
#      - name: Build cosmjs
#        run: yarn vendor:cosmjs:build

#      - name: Remove Yarn Cache
#        run: |
#          rm -rf vendor/cosmjs/.yarn/cache

      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v3

      # production mode
      - name: Build Production
        uses: docker/build-push-action@v6
        with:
          file: docker/node.dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            NODE_ENV=production
            WATCH=false
            ENDPOINT=http://proxy:26657
            CHAIN_ID=poktroll
#
#      # develop mode
#      - name: Build Develop
#        uses: docker/build-push-action@v6
#        with:
#          file: docker/node.dockerfile
#          cache-from: type=gha
#          cache-to: type=gha,mode=max
#          build-args: |
#            NODE_ENV=develop
#            WATCH=true
#            ENDPOINT=http://proxy:26657
#            CHAIN_ID=poktroll

#      - name: Install subql-node-cosmos
#        run: yarn dlx @subql/node-cosmos
#
#      - name: Run tests with Subquery Node
#        run: subql-node-cosmos test -f ${{ github.workspace }}
